{"highlights":[{"content_html":"<p>This is a highlighted post. Here's a quick equation: $$a^2 + b^2 = c^2$$</p>","metadata":{"date":"Sat, 01 Mar 2025 00:00:00 GMT","slug":"highlighted-post","title":"A Highlighted Post"},"slug":"highlighted-post"},{"content_html":"<h1>PARTS:</h1>\n<ol>\n<li><a href=\"/posts/weather-ai-part-1.html\">Ideas &amp; Looking At The Data</a></li>\n</ol>","metadata":{"date":"Tue, 08 Apr 2025 00:00:00 GMT","slug":"weather-ai","title":"Weather Forecasting"},"slug":"weather-ai"}],"posts":[{"content_html":"<h1><strong>HELLO WORLD</strong>.</h1>\n<h1>Who am I?</h1>\n<p>I'm a 16-year-old aspiring to break into CS/AI and quantitative finance, but what really matters is that- \nI'm simply someone who has grown to love graphs and data, and the idea of information and analysis.</p>\n<h1>Where I'm coming from:</h1>\n<p>I've been coding (ashamed to call it programming) since I was 11, though I often struggled to see projects through to completion. It wasn't for a lack of ideas- it was a lack of <strong>discipline</strong>. \nTo illustrate the challenges I faced, here are some of my past projects:</p>\n<h2>Project: NoSea</h2>\n<p>This was an overly ambitious one for sure-</p>\n<h3>The Idea:</h3>\n<p>I wanted to make an <strong>operating system (OS) all by myself</strong>... Sounds pretty stupid, right? \nWell it wasn't just another \"Ubuntu reskin\", I wanted to write the kernel and all, by myself. From scratch. <br />\nMy thoughts back then went something like:</p>\n<blockquote>\n<p>If we could have a lightweight, open-source, multi-platform OS (For mobile and PCs), that was the exact same on both platforms (unlike Linux, and android which is based on linux but basically completely different), it would be <strong>\"THE NEXT BIG THING\"</strong></p>\n</blockquote>\n<h3>Resources:</h3>\n<p>Although my project itself wasn't useful at all the resources I used, were.<br />\nSo here are some of them for reference (I can't find all of them as I deleted the repo, and the files. I wasn't logging any of my activities so I can only rely on my memory for this-).    </p>\n<ol>\n<li><a href=\"https://www.youtube.com/playlist?list=PLHh55M_Kq4OApWScZyPl5HhgsTJS9MZ6M\">Write Your Own Operating System (Youtube)</a>: Teaches most of the fundamental and gives an idea about the true complexity of it all. But it's pretty old now, still mostly how systems work- but pretty old.</li>\n<li><a href=\"https://www.youtube.com/playlist?list=PLZQftyCk7_SeZRitx5MjBKzTtvk0pHMtp\">Write Your Own 64-bit Operating System (Youtube - CodePulse)</a>: This is where I made my first mistake. It is a really good example, but I followed it blindly at first, doing exactly what he was without understand the <em>WHY?</em> and the underlying theory. </li>\n<li><a href=\"https://www.youtube.com/playlist?list=PLm3B56ql_akNcvH8vvJRYOc7TbYhRs19M\">Making an OS(x86)</a>: Again a really good resource... but I found it later- after I had nearly given up.   </li>\n<li><a href=\"https://wiki.osdev.org/Expanded_Main_Page\">OSDEV wiki</a>: Literally the Bible for OS dev. Back then, I didnt really understand all the computer stuff and didn't put in enough effort to learn... so I was really confused. Looking back now I can see why it's so highly regarded. </li>\n</ol>\n<h3>The Plan:</h3>\n<p>I didn't have a solid plan at first and ended up failing about 5 or 6 times. (An OS as my first big project was a REALLY BAD idea.) But after all those mess-ups and way too much pondering when I should've been studying, I came up with something. (I'm writing this now, so it's all from memory-I might've made it a bit better by accident, but I've tried to keep the original idea, flaws included.)</p>\n<p><img src=\"/static/images/NoSea-architecture.png\" class=\"invertible\">  </p>\n<p>[\n    If you're seeing this- it means I couldn't meet the deadline (01/04/2025), and am too busy/lazy to finish the whole thing. I may update it in the future, but right now my current projects take priority. I hope whatever is written atleast gave you a rough idea about me.\n]</p>","metadata":{"date":"Tue, 01 Apr 2025 00:00:00 GMT","slug":"hello-world","tags":["python","blog"],"title":"Hello World"},"slug":"hello-world"},{"content_html":"<h1>Introduction:</h1>\n<p>Ever wonder why the weather app says there's heavy rain today, while you're sitting under the burning sun? Me too.  <br />\nApparently it's not as easy as one might imagine, what we have today is borderline magic. <br />\nBut still curiosity got the better of me, so I decided to start this project, to uncover what makes it so challenging and maybe learn something along the way.    </p>\n<h1>But How Does Weather Even Work?</h1>\n<p>I remember the weather related chapters used to be some of the most interesting chapters in geography, back in school. Even more so than the science classes (I'm a science student). It was one of those chapters that just made pure logical sense, without overwhelming the students with math.<br />\nTo better understand the numerical observations, we must first qualitatively understand what weather patterns on Earth actually look like. This part will try to cover as much as possible in a reasonable amount of time. (excuse the use of non-technical terms, it's meant to give an idea without getting into the jargon)  </p>\n<h2>The Basic Mechanics:</h2>\n<h3>Convection:</h3>\n<p>Okay so this is typically common-knowledge, but as a refresher, <strong>hot-air is typically lighter (less dense) than cold-air</strong>. This causes hot air to rise up into the atmosphere, causing a <strong>Vertical wind current</strong>.    </p>\n<h3>Drop In Temperature with height:</h3>\n<h1>The Old Way: Crunching Numbers</h1>\n<p>Way back, predicting weather meant solving big equations-like how fluids move (Navier-Stokes, if you're nerdy). Think of it as slicing the sky into a grid and calculating what happens next. That's numerical weather prediction (NWP). Supercomputers run this for days, tweaking it with real data so it doesn't go off the rails. ERA5, my file, comes from that-past weather re-simulated with today's tech. It's a cheat sheet of what happened in 2024, and I'm using it to jumpstart my own model.</p>\n<p>But here's the catch: those equations are slow, and tiny mistakes explode fast. Chaos, right? That's why I'm not stopping there.</p>\n<h1>The New Way: AI's Turn</h1>\n<p>Then there's AI. I ran into GenCast-Google's trick from late 2024. It's this crazy model that skips the physics and learns patterns from piles of ERA5 data, spitting out 15-day forecasts in minutes. Wild. Or nowcasting-quick 0-6 hour guesses from radar pics. I'm aiming simpler: a day ahead with a neural network (CNN). Maybe I can nudge it with sparse data later, GenCast-style. It's less \"solve the universe\" and more \"spot the trends\"-faster, scrappier.</p>\n<h1>Peeking at the Data:</h1>\n<p>So after a few hours of research I stumbled upon <a href=\"https://cds.climate.copernicus.eu/datasets/reanalysis-era5-single-levels?tab=overview\"><strong>ERA5</strong></a>, it's probably the best historical dataset available for free. I did consider trying to get IMD data specific to India, but I guess ERA5 is good enough for a prototype. \nThe dataset on its own is probably very huge (~ few Petabytes), so I decided to get only a few months and a few timestamps worth of data from <strong>2024</strong>, i.e, <strong>Sep, Oct, Nov, Dec</strong>. And roughly <strong>4 hour</strong> intervals.<br />\nThe website conviniently provides it's api guide, as well as auto-generation of the api request. <br />\nhere is the code:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">cdsapi</span>\n\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;reanalysis-era5-single-levels&quot;</span>\n<span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;product_type&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;reanalysis&quot;</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;variable&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">&quot;10m_u_component_of_wind&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;10m_v_component_of_wind&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;2m_temperature&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;mean_sea_level_pressure&quot;</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">&quot;year&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;2024&quot;</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;month&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;09&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;10&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;11&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;12&quot;</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;day&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;01&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;02&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;03&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;04&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;05&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;06&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;07&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;08&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;09&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;10&quot;</span><span class=\"p\">,</span>\n             <span class=\"s2\">&quot;11&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;12&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;13&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;14&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;15&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;16&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;17&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;18&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;19&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;20&quot;</span><span class=\"p\">,</span>\n             <span class=\"s2\">&quot;21&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;22&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;23&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;24&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;25&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;26&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;27&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;28&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;29&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;30&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;31&quot;</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;time&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;00:00&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;01:00&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;04:00&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;08:00&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;12:00&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;16:00&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;20:00&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;23:00&quot;</span><span class=\"p\">],</span>\n    <span class=\"s2\">&quot;data_format&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;netcdf&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;download_format&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;unarchived&quot;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">cdsapi</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">retrieve</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<p>(NOTE: apparently you're supposed to have a <code>.cdsapirc</code>, for authentication. But it's also supposed to be in <code>$HOME</code>, which makes it worse, and I spent a few hours figuring out how to have everything contained in the project folder itself (didn't work in the end))</p>\n<p>If you didn't notice it yet, this was a really bad idea, here is why:   </p>\n<ul>\n<li>I talked about weather patterns and stuff before, so it's kind of ironic, having <strong>4 consecutive months of weather data</strong> instead of spaced out ones.</li>\n<li>For our use case, we wanted to <strong>Nowcast</strong> i.e predict hourly or even more fine-grained- having our original data itself be spaced by <strong>4 hours</strong>, makes it less than ideal. We might have to either <strong>Re-download</strong> with hourly data, or <strong>interpolate locally</strong> (which seems to be a lot of work) in the future.</li>\n</ul>\n<p>A few other problems exist, but those are the major problems that I might have to tackle in the future. Now, on to the fun part.    </p>\n<p>I did some searching and came across this library called <code>cartopy</code> (<a href=\"https://scitools.org.uk/cartopy/docs/latest/\">link</a>, <a href=\"https://github.com/SciTools/cartopy\">github</a>), that seems to integrate seemlessly with <code>matplotlib</code>, and displays maps.</p>","metadata":{"date":"Tue, 08 Apr 2025 00:00:00 GMT","slug":"weather-ai-part-1","tags":["python","blog","weather"],"title":"Forecasting Weather (Part 1): Ideas & Looking At The Data"},"slug":"weather-ai-part-1"}]}
